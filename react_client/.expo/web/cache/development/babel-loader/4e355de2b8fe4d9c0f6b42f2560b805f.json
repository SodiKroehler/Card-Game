{"ast":null,"code":"import _readOnlyError from \"@babel/runtime/helpers/readOnlyError\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Canceled\\\\react_client\\\\components\\\\Tile.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar Tile = function (_React$Component) {\n  _inherits(Tile, _React$Component);\n\n  var _super = _createSuper(Tile);\n\n  function Tile(props) {\n    var _this;\n\n    _classCallCheck(this, Tile);\n\n    _this = _super.call(this);\n    var dislikeButton = null;\n\n    if (_this.props.onDisLikeHandler != null) {\n      React.createElement(TouchableOpacity, {\n        onPress: handleDislike,\n        style: styles.button,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }\n      }, \"Dislike\")), _readOnlyError(\"dislikeButton\");\n    }\n\n    return _this;\n  }\n\n  _createClass(Tile, [{\n    key: \"handleDislike\",\n    value: function handleDislike() {\n      this.props.onDisLikeHandler(props.cardName);\n    }\n  }, {\n    key: \"handleLike\",\n    value: function handleLike() {\n      this.props.onLikeHandler(props.cardName);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: \"data:image/gif;base64,\" + this.props.base64data\n        },\n        style: styles.tile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: handleLike,\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }, \"Like\")), dislikeButton);\n    }\n  }]);\n\n  return Tile;\n}(React.Component);\n\nexport { Tile as default };\nvar styles = StyleSheet.create({\n  tile: {\n    width: 305,\n    height: 305,\n    marginBottom: 0\n  },\n  instructions: {\n    color: '#888',\n    fontSize: 18,\n    marginHorizontal: 15\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    backgroundColor: \"blue\",\n    padding: 20,\n    borderRadius: 5\n  },\n  buttonText: {\n    fontSize: 20,\n    color: '#fff'\n  }\n});","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/Canceled/react_client/components/Tile.js"],"names":["React","Tile","props","dislikeButton","onDisLikeHandler","handleDislike","styles","button","buttonText","cardName","onLikeHandler","container","uri","base64data","tile","handleLike","Component","StyleSheet","create","width","height","marginBottom","instructions","color","fontSize","marginHorizontal","flex","backgroundColor","alignItems","justifyContent","padding","borderRadius"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;IASqBC,I;;;;;AAEnB,gBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB;AACA,QAAMC,aAAa,GAAG,IAAtB;;AACA,QAAG,MAAKD,KAAL,CAAWE,gBAAX,IAA+B,IAAlC,EAAuC;AACrB,0BAAC,gBAAD;AAAkB,QAAA,OAAO,EAAIC,aAA7B;AAChB,QAAA,KAAK,EAAIC,MAAM,CAACC,MADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEd,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAGD,MAAM,CAACE,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFc,CAAhB;AAID;;AARe;AASjB;;;;WAEF,yBAAe;AACZ,WAAKN,KAAL,CAAWE,gBAAX,CAA4BF,KAAK,CAACO,QAAlC;AACD;;;WACD,sBAAY;AACV,WAAKP,KAAL,CAAWQ,aAAX,CAAyBR,KAAK,CAACO,QAA/B;AACD;;;WAED,kBAAS;AAEP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACK,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE;AAACC,UAAAA,GAAG,6BAA2B,KAAKV,KAAL,CAAWW;AAA1C,SAAf;AAAyE,QAAA,KAAK,EAAIP,MAAM,CAACQ,IAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAGA,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAIC,UAA7B;AACA,QAAA,KAAK,EAAIT,MAAM,CAACC,MADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAGD,MAAM,CAACE,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CAHA,EAOCL,aAPD,CADF;AAYD;;;;EAlC+BH,KAAK,CAACgB,S;;SAAnBf,I;AAoCrB,IAAMK,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,IAAI,EAAC;AACHK,IAAAA,KAAK,EAAE,GADJ;AAEHC,IAAAA,MAAM,EAAE,GAFL;AAGHC,IAAAA,YAAY,EAAE;AAHX,GAD0B;AAM/BC,EAAAA,YAAY,EAAC;AACXC,IAAAA,KAAK,EAAE,MADI;AAEXC,IAAAA,QAAQ,EAAE,EAFC;AAGXC,IAAAA,gBAAgB,EAAE;AAHP,GANkB;AAW/Bd,EAAAA,SAAS,EAAE;AACTe,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GAXoB;AAiB/BtB,EAAAA,MAAM,EAAE;AACNoB,IAAAA,eAAe,EAAE,MADX;AAENG,IAAAA,OAAO,EAAE,EAFH;AAGNC,IAAAA,YAAY,EAAE;AAHR,GAjBuB;AAsB/BvB,EAAAA,UAAU,EAAE;AACVgB,IAAAA,QAAQ,EAAE,EADA;AAEVD,IAAAA,KAAK,EAAE;AAFG;AAtBmB,CAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport { Image, StyleSheet, Text, TouchableOpacity, View} from 'react-native';\r\n\r\n/*props: \r\n    base64data\r\n    onLikeHandler   \r\n    onDisLikeHandler\r\n    cardName\r\n*/\r\nexport default class Tile extends React.Component {\r\n\r\n  constructor(props){\r\n    super();\r\n    const dislikeButton = null;\r\n    if(this.props.onDisLikeHandler != null){\r\n      dislikeButton = <TouchableOpacity onPress = {handleDislike}\r\n      style = {styles.button}>\r\n        <Text style= {styles.buttonText}>Dislike</Text>\r\n      </TouchableOpacity>\r\n    }\r\n  }\r\n\r\n handleDislike(){\r\n    this.props.onDisLikeHandler(props.cardName);\r\n  }\r\n  handleLike(){\r\n    this.props.onLikeHandler(props.cardName);\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n      <Image source={{uri: `data:image/gif;base64,${this.props.base64data}`}}  style = {styles.tile} /> \r\n       \r\n      <TouchableOpacity onPress = {handleLike}\r\n      style = {styles.button}>\r\n        <Text style= {styles.buttonText}>Like</Text>\r\n      </TouchableOpacity>\r\n      {dislikeButton}\r\n      \r\n    </View>\r\n    )\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  tile:{\r\n    width: 305, \r\n    height: 305,\r\n    marginBottom: 0,\r\n  },\r\n  instructions:{\r\n    color: '#888', \r\n    fontSize: 18,\r\n    marginHorizontal: 15,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  button: {\r\n    backgroundColor: \"blue\",\r\n    padding: 20,\r\n    borderRadius: 5,\r\n  },\r\n  buttonText: {\r\n    fontSize: 20,\r\n    color: '#fff',\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}