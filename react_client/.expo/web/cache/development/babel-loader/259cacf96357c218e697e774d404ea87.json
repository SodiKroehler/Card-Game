{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Canceled\\\\react_client\\\\components\\\\Tile.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { purp, cream } from \"./../styles/common\";\n\nvar Tile = function (_React$Component) {\n  _inherits(Tile, _React$Component);\n\n  var _super = _createSuper(Tile);\n\n  function Tile(props) {\n    _classCallCheck(this, Tile);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(Tile, [{\n    key: \"handleDislike\",\n    value: function handleDislike() {\n      this.props.onDisLikeHandler(this.props.cardName);\n    }\n  }, {\n    key: \"handleLike\",\n    value: function handleLike() {\n      this.props.onLikeHandler(this.props.cardName);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var likeButton = null;\n      var disLikeButton = null;\n\n      if (this.props.onLikeHandler != null) {\n        likeButton = React.createElement(TouchableOpacity, {\n          onPress: this.handleLike.bind(this),\n          style: styles.button,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 20\n          }\n        }, React.createElement(Text, {\n          style: styles.likeButtonText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 9\n          }\n        }, \":)\"));\n      }\n\n      if (this.props.onDisLikeHandler != null) {\n        disLikeButton = React.createElement(TouchableOpacity, {\n          onPress: this.handleDislike.bind(this),\n          style: styles.button,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 23\n          }\n        }, React.createElement(Text, {\n          style: styles.dislButtonText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 9\n          }\n        }, \":/\"));\n      }\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: \"data:image/gif;base64,\" + this.props.base64data\n        },\n        style: styles.tile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }\n      }), likeButton, disLikeButton);\n    }\n  }]);\n\n  return Tile;\n}(React.Component);\n\nexport { Tile as default };\nvar styles = StyleSheet.create({\n  tile: {\n    width: 305,\n    height: 305,\n    margin: 2\n  },\n  instructions: {\n    color: '#888',\n    fontSize: 18,\n    marginHorizontal: 15\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    borderColor: purp,\n    justifyContent: 'center',\n    textAlign: 'center',\n    borderWidth: 2,\n    width: 27,\n    height: 27,\n    position: 'absolute',\n    top: 316,\n    borderRadius: '50%'\n  },\n  likeButtonText: {\n    fontSize: 26,\n    color: purp,\n    transform: [{\n      rotateY: \"60deg\"\n    }, {\n      rotateZ: \"100deg\"\n    }, {\n      translateY: -2\n    }]\n  },\n  dislButtonText: {\n    fontSize: 17,\n    color: purp,\n    transform: [{\n      rotateX: \"50deg\"\n    }, {\n      rotateZ: \"50deg\"\n    }]\n  }\n});","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/Canceled/react_client/components/Tile.js"],"names":["React","purp","cream","Tile","props","onDisLikeHandler","cardName","onLikeHandler","likeButton","disLikeButton","handleLike","bind","styles","button","likeButtonText","handleDislike","dislButtonText","container","uri","base64data","tile","Component","StyleSheet","create","width","height","margin","instructions","color","fontSize","marginHorizontal","flex","backgroundColor","alignItems","justifyContent","borderColor","textAlign","borderWidth","position","top","borderRadius","transform","rotateY","rotateZ","translateY","rotateX"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Image, StyleSheet, Text, TouchableOpacity, View} from 'react-native';\r\nimport {purp, cream } from './../styles/common';\r\n\r\n/*props: \r\n    base64data\r\n    onLikeHandler   \r\n    onDisLikeHandler\r\n    cardName\r\n*/\r\nexport default class Tile extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n handleDislike(){\r\n    this.props.onDisLikeHandler(this.props.cardName);\r\n  }\r\n  handleLike(){\r\n    this.props.onLikeHandler(this.props.cardName);\r\n  }\r\n\r\n  render() {\r\n    var likeButton = null;\r\n    var disLikeButton = null;\r\n    if (this.props.onLikeHandler != null){\r\n      likeButton = <TouchableOpacity onPress = {this.handleLike.bind(this)} style = {styles.button}>\r\n        <Text style= {styles.likeButtonText}>:)</Text>\r\n      </TouchableOpacity>\r\n    }\r\n    if (this.props.onDisLikeHandler != null){\r\n      disLikeButton = <TouchableOpacity onPress = {this.handleDislike.bind(this)} style = {styles.button}>\r\n        <Text style= {styles.dislButtonText}>:/</Text>\r\n      </TouchableOpacity>\r\n    }\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n      <Image source={{uri: `data:image/gif;base64,${this.props.base64data}`}}  style = {styles.tile} /> \r\n      {likeButton}\r\n      {disLikeButton}\r\n\r\n      \r\n      \r\n    </View>\r\n    )\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  tile:{\r\n    width: 305, \r\n    height: 305,\r\n    margin: 2,\r\n  },\r\n  instructions:{\r\n    color: '#888', \r\n    fontSize: 18,\r\n    marginHorizontal: 15,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  button: {\r\n    borderColor:purp,\r\n    justifyContent:'center',\r\n    textAlign:'center',\r\n    borderWidth:2,\r\n    width:27,\r\n    height: 27,\r\n    position:'absolute',\r\n    top:316,\r\n    borderRadius: '50%',\r\n\r\n  },\r\n  likeButtonText: {\r\n    fontSize: 26,\r\n    color: purp,\r\n    transform: [\r\n      { rotateY: \"60deg\" },\r\n      {rotateZ: \"100deg\" },\r\n      { translateY: -2 }\r\n    ]\r\n  },\r\n  dislButtonText: {\r\n    fontSize: 17,\r\n    color: purp,\r\n    transform: [\r\n      {rotateX: \"50deg\" },\r\n      {rotateZ: \"50deg\" }\r\n\r\n    ]\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}