{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Canceled\\\\react_client\\\\components\\\\Tile.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { purp, cream, deGris } from \"./../styles/common\";\n\nvar Tile = function (_React$Component) {\n  _inherits(Tile, _React$Component);\n\n  var _super = _createSuper(Tile);\n\n  function Tile(props) {\n    _classCallCheck(this, Tile);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(Tile, [{\n    key: \"handleDislike\",\n    value: function handleDislike() {\n      this.props.onDisLikeHandler(this.props.cardName);\n    }\n  }, {\n    key: \"handleLike\",\n    value: function handleLike() {\n      this.props.onLikeHandler(this.props.cardName);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var tileSize = {\n        width: this.props.cardSize,\n        height: this.props.cardSize\n      };\n      var clickedStyleContainer = this.props.clicked === false ? styles : StyleSheet.compose(styles.container, clkd.container);\n      var clickedStyleButtonBar = this.props.clicked === false ? styles : StyleSheet.compose(styles.buttonBar, clkd.buttonBar);\n      var dynamicTile = StyleSheet.compose(styles.tile, tileSize);\n      var likeButton = null;\n      var disLikeButton = null;\n\n      if (this.props.onLikeHandler != null) {\n        likeButton = React.createElement(TouchableOpacity, {\n          onPress: this.handleLike.bind(this),\n          style: styles.button,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 20\n          }\n        }, React.createElement(Text, {\n          style: styles.likeButtonText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 9\n          }\n        }, \":)\"));\n      }\n\n      if (this.props.onDisLikeHandler != null) {\n        disLikeButton = React.createElement(TouchableOpacity, {\n          onPress: this.handleDislike.bind(this),\n          style: styles.button,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 23\n          }\n        }, React.createElement(Text, {\n          style: styles.dislButtonText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 9\n          }\n        }, \":/\"));\n      }\n\n      return React.createElement(View, {\n        style: clickedStyleContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: \"data:image/gif;base64,\" + this.props.base64data\n        },\n        style: dynamicTile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }\n      }), React.createElement(View, {\n        style: clickedStyleButtonBar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }\n      }, likeButton, disLikeButton));\n    }\n  }]);\n\n  return Tile;\n}(React.Component);\n\nexport { Tile as default };\nvar clkd = StyleSheet.create({\n  container: {\n    backgroundColor: purp\n  },\n  buttonBar: {\n    backgroundColor: purp\n  }\n});\nvar styles = StyleSheet.create({\n  tile: {\n    margin: 2\n  },\n  container: {\n    flex: 1,\n    backgroundColor: cream,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    backgroundColor: purp,\n    justifyContent: 'center',\n    textAlign: 'center',\n    borderWidth: 2,\n    width: 27,\n    height: 27,\n    left: 15,\n    borderRadius: 14\n  },\n  buttonBar: {\n    backgroundColor: cream,\n    height: 30,\n    width: '100%'\n  },\n  likeButtonText: {\n    fontSize: 26,\n    color: cream,\n    transform: [{\n      rotateX: \"-2deg\"\n    }, {\n      rotateY: \"60deg\"\n    }, {\n      rotateZ: \"90deg\"\n    }]\n  },\n  dislButtonText: {\n    fontSize: 26,\n    color: cream,\n    transform: [{\n      rotateX: \"-2deg\"\n    }, {\n      rotateY: \"-10deg\"\n    }, {\n      rotateZ: \"90deg\"\n    }]\n  }\n});","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/Canceled/react_client/components/Tile.js"],"names":["React","purp","cream","deGris","Tile","props","onDisLikeHandler","cardName","onLikeHandler","tileSize","width","cardSize","height","clickedStyleContainer","clicked","styles","StyleSheet","compose","container","clkd","clickedStyleButtonBar","buttonBar","dynamicTile","tile","likeButton","disLikeButton","handleLike","bind","button","likeButtonText","handleDislike","dislButtonText","uri","base64data","Component","create","backgroundColor","margin","flex","alignItems","justifyContent","textAlign","borderWidth","left","borderRadius","fontSize","color","transform","rotateX","rotateY","rotateZ"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Image, StyleSheet, Text, TouchableOpacity, View} from 'react-native';\r\nimport {purp, cream, deGris } from './../styles/common';\r\n\r\n/*props: \r\n    base64data\r\n    onLikeHandler   \r\n    onDisLikeHandler\r\n    cardName\r\n    cardSize\r\n*/\r\nexport default class Tile extends React.Component {\r\n  \r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n handleDislike(){\r\n    this.props.onDisLikeHandler(this.props.cardName);\r\n  }\r\n  handleLike(){\r\n    this.props.onLikeHandler(this.props.cardName);\r\n  }\r\n  \r\n  render() {\r\n\r\n    const tileSize = {\r\n      width: this.props.cardSize, \r\n      height: this.props.cardSize,\r\n  };\r\n\r\n    var clickedStyleContainer = (this.props.clicked === false) ? styles : StyleSheet.compose(styles.container,clkd.container);\r\n    var clickedStyleButtonBar = (this.props.clicked === false) ? styles : StyleSheet.compose(styles.buttonBar,clkd.buttonBar);\r\n    var dynamicTile = StyleSheet.compose(styles.tile, tileSize);\r\n    var likeButton = null;\r\n    var disLikeButton = null;\r\n    if (this.props.onLikeHandler != null){\r\n      likeButton = <TouchableOpacity onPress = {this.handleLike.bind(this)} style = {styles.button}>\r\n        <Text style= {styles.likeButtonText}>:)</Text>\r\n      </TouchableOpacity>\r\n    }\r\n    if (this.props.onDisLikeHandler != null){\r\n      disLikeButton = <TouchableOpacity onPress = {this.handleDislike.bind(this)} style = {styles.button}>\r\n        <Text style= {styles.dislButtonText}>:/</Text>\r\n      </TouchableOpacity>\r\n    }\r\n\r\n    return (\r\n      <View style={clickedStyleContainer} >\r\n      <Image source={{uri: `data:image/gif;base64,${this.props.base64data}`}}  style = {dynamicTile} /> \r\n      <View style= {clickedStyleButtonBar}>\r\n        {likeButton}\r\n        {disLikeButton}\r\n      </View>\r\n      \r\n\r\n      \r\n      \r\n    </View>\r\n    )\r\n  }\r\n}\r\nconst clkd = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: purp,\r\n  },\r\n  buttonBar:{\r\n    backgroundColor:  purp,\r\n  },\r\n});\r\n\r\nconst styles = StyleSheet.create({\r\n  tile:{\r\n  \r\n    margin: 2,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: cream,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  button: {\r\n    backgroundColor: purp,\r\n    justifyContent:'center',\r\n    textAlign:'center',\r\n    borderWidth:2,\r\n    width:27,\r\n    height: 27,\r\n    left:15,\r\n    borderRadius: 14,\r\n\r\n  },\r\n  buttonBar:{\r\n    backgroundColor: cream,\r\n    height:30,\r\n    width:'100%',\r\n  },\r\n  likeButtonText: {\r\n    fontSize: 26,\r\n    color: cream,\r\n    transform: [\r\n      { rotateX: \"-2deg\" },\r\n      { rotateY: \"60deg\" },\r\n      {rotateZ: \"90deg\" },\r\n      /*{ translateZ: 5 }*/\r\n    ]\r\n  },\r\n  dislButtonText: {\r\n    fontSize: 26,\r\n    color: cream,\r\n    transform: [\r\n      { rotateX: \"-2deg\" },\r\n      { rotateY: \"-10deg\" },\r\n      {rotateZ: \"90deg\" },\r\n      //{ translateZ: -1 }\r\n    ]\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}