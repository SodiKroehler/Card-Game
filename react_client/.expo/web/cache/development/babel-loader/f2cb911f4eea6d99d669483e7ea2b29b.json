{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Canceled\\\\react_client\\\\components\\\\WinnerModal.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Share from \"react-native-web/dist/exports/Share\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Tile from \"./Tile\";\nexport default function WinnerModal(props) {\n  var winnerName = props.winner[0];\n\n  var onShare = function onShare() {\n    var result;\n    return _regeneratorRuntime.async(function onShare$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Share.share({\n              message: props.prompt\n            }));\n\n          case 3:\n            result = _context.sent;\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            alert(_context.t0.message);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  return React.createElement(Modal, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"The winner was \", winnerName, \" \"), React.createElement(Tile, {\n    base64data: props.winner[1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: onShare,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Share\")));\n}\nvar styles = StyleSheet.create({\n  instructions: {\n    color: '#888',\n    fontSize: 18,\n    marginHorizontal: 15\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    backgroundColor: \"blue\",\n    padding: 20,\n    borderRadius: 5\n  },\n  inputLine: {\n    backgroundColor: \"grey\",\n    padding: 20,\n    borderRadius: 5\n  },\n  buttonText: {\n    fontSize: 20,\n    color: '#fff'\n  }\n});","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/Canceled/react_client/components/WinnerModal.js"],"names":["StatusBar","React","Tile","WinnerModal","props","winnerName","winner","onShare","Share","share","message","prompt","result","alert","styles","container","button","buttonText","StyleSheet","create","instructions","color","fontSize","marginHorizontal","flex","backgroundColor","alignItems","justifyContent","padding","borderRadius","inputLine"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;AAEA,OAAOC,IAAP;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACzC,MAAMC,UAAU,GAAGD,KAAK,CAACE,MAAN,CAAa,CAAb,CAAnB;;AACA,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAESC,KAAK,CAACC,KAAN,CAAY;AAC/BC,cAAAA,OAAO,EAAEN,KAAK,CAACO;AADgB,aAAZ,CAFT;;AAAA;AAENC,YAAAA,MAFM;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQZC,YAAAA,KAAK,CAAC,YAAMH,OAAP,CAAL;;AARY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAWA,SAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEI,MAAM,CAACC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAsBV,UAAtB,MAFF,EAGE,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAID,KAAK,CAACE,MAAN,CAAa,CAAb,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAKE,oBAAC,gBAAD;AACC,IAAA,KAAK,EAAIQ,MAAM,CAACE,MADjB;AAEC,IAAA,OAAO,EAAGT,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAGO,MAAM,CAACG,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,CALF,CAFF;AAeD;AAED,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAE/BC,EAAAA,YAAY,EAAC;AACXC,IAAAA,KAAK,EAAE,MADI;AAEXC,IAAAA,QAAQ,EAAE,EAFC;AAGXC,IAAAA,gBAAgB,EAAE;AAHP,GAFkB;AAO/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GAPoB;AAa/BX,EAAAA,MAAM,EAAE;AACNS,IAAAA,eAAe,EAAE,MADX;AAENG,IAAAA,OAAO,EAAE,EAFH;AAGNC,IAAAA,YAAY,EAAE;AAHR,GAbuB;AAkB/BC,EAAAA,SAAS,EAAE;AACTL,IAAAA,eAAe,EAAE,MADR;AAETG,IAAAA,OAAO,EAAE,EAFA;AAGTC,IAAAA,YAAY,EAAE;AAHL,GAlBoB;AAuB/BZ,EAAAA,UAAU,EAAE;AACVK,IAAAA,QAAQ,EAAE,EADA;AAEVD,IAAAA,KAAK,EAAE;AAFG;AAvBmB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React from 'react';\r\nimport { Modal, StyleSheet, Share, Text, TouchableOpacity} from 'react-native';\r\nimport Tile from './Tile'; \r\n\r\nexport default function WinnerModal(props) {\r\n  const winnerName = props.winner[0];\r\n  const onShare = async () => {\r\n    try {\r\n      const result = await Share.share({\r\n        message: props.prompt,\r\n        //url:props.winner[2].gif/>\r\n      });\r\n    } \r\n    catch (error) {\r\n      alert(error.message);\r\n    }\r\n  }\r\n  return (\r\n\r\n    <Modal style={styles.container}>\r\n\r\n      <Text>The winner was {winnerName} </Text>\r\n      <Tile base64data = {props.winner[1]}></Tile>\r\n\r\n      <TouchableOpacity \r\n       style = {styles.button}\r\n       onPress= {onShare}>\r\n        <Text style= {styles.buttonText}>Share</Text>\r\n      </TouchableOpacity>\r\n\r\n    </Modal>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n \r\n  instructions:{\r\n    color: '#888', \r\n    fontSize: 18,\r\n    marginHorizontal: 15,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  button: {\r\n    backgroundColor: \"blue\",\r\n    padding: 20,\r\n    borderRadius: 5,\r\n  },\r\n  inputLine: {\r\n    backgroundColor: \"grey\",\r\n    padding: 20,\r\n    borderRadius: 5,\r\n  },\r\n  buttonText: {\r\n    fontSize: 20,\r\n    color: '#fff',\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}