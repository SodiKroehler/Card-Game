{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Canceled\\\\react_client\\\\components\\\\ImageGallery.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport CustomCarousel from \"./CustomCarousel\";\nimport { purp, cream, deGris } from \"./../styles/common\";\n\nvar ImageGallery = function (_React$Component) {\n  _inherits(ImageGallery, _React$Component);\n\n  var _super = _createSuper(ImageGallery);\n\n  function ImageGallery(props) {\n    _classCallCheck(this, ImageGallery);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(ImageGallery, [{\n    key: \"changeSubmission\",\n    value: function changeSubmission(tuple) {\n      this.props.cardHandler(tuple);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(CustomCarousel, {\n        style: styles.container,\n        cards: this.props.cards,\n        cardNames: this.props.cardNames,\n        cardHandler: this.changeSubmission.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return ImageGallery;\n}(React.Component);\n\nexport { ImageGallery as default };\n{}\nvar styles = StyleSheet.create({\n  gallery: {\n    width: '100%',\n    height: 320\n  },\n  container: {\n    flex: 10,\n    backgroundColor: cream,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%'\n  }\n});","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/Canceled/react_client/components/ImageGallery.js"],"names":["React","CustomCarousel","purp","cream","deGris","ImageGallery","props","tuple","cardHandler","styles","container","cards","cardNames","changeSubmission","bind","Component","StyleSheet","create","gallery","width","height","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAGA,OAAOC,cAAP;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,MAArB;;IAMqBC,Y;;;;;AACnB,wBAAYC,KAAZ,EAAkB;AAAA;;AAAA,6BACVA,KADU;AAEjB;;;;WACD,0BAAiBC,KAAjB,EAAuB;AACrB,WAAKD,KAAL,CAAWE,WAAX,CAAuBD,KAAvB;AACD;;;WACD,kBAAQ;AACN,aACE,oBAAC,cAAD;AACE,QAAA,KAAK,EAAEE,MAAM,CAACC,SADhB;AAEE,QAAA,KAAK,EAAI,KAAKJ,KAAL,CAAWK,KAFtB;AAGE,QAAA,SAAS,EAAI,KAAKL,KAAL,CAAWM,SAH1B;AAIE,QAAA,WAAW,EAAI,KAAKC,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAQD;;;;EAhBuCd,KAAK,CAACe,S;;SAA3BV,Y;AAkBrB,CAuFG;AACH,IAAMI,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,OAAO,EAAC;AACNC,IAAAA,KAAK,EAAC,MADA;AAENC,IAAAA,MAAM,EAAE;AAFF,GADuB;AAK/BV,EAAAA,SAAS,EAAE;AACTW,IAAAA,IAAI,EAAE,EADG;AAETC,IAAAA,eAAe,EAAEnB,KAFR;AAGToB,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE,QAJP;AAKTL,IAAAA,KAAK,EAAE;AALE;AALoB,CAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, View, ScrollView } from 'react-native';\r\n\r\nimport CustomCarousel from './CustomCarousel';\r\nimport {purp, cream, deGris } from './../styles/common';\r\n/* props:\r\n      cards\r\n      cardNames\r\n      cardHandler\r\n      */\r\nexport default class ImageGallery extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n  changeSubmission(tuple){\r\n    this.props.cardHandler(tuple);\r\n  }\r\n  render(){\r\n    return(\r\n      <CustomCarousel\r\n        style={styles.container}\r\n        cards = {this.props.cards}\r\n        cardNames = {this.props.cardNames}\r\n        cardHandler = {this.changeSubmission.bind(this)}\r\n      ></CustomCarousel>\r\n    )\r\n  }\r\n}\r\n{/*}\r\nexport default class ImageGallery extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      clickedArray : [false,false,false,false,false,false,false],\r\n    }\r\n    this.gallery = {};\r\n  }\r\n\r\n  changeSubmission(idx){\r\n    var cardName;\r\n    console.log(idx);\r\n    for(var n=0;n<this.props.cardNames.length;n++){\r\n      if(this.props.cardNames[n] == idx){\r\n        cardName = this.props.cardNames[idx];\r\n        this.props.cardHandler([cardName,n]);\r\n        const list = this.state.clickedArray.map((item,j) => {\r\n          if (j === n){\r\n            return true;\r\n          } else {\r\n            return false;\r\n          }\r\n        });\r\n        console.log(list);\r\n        this.setState({clickedArray : list});\r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n  \r\n  render() {\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n          <ScrollView style= {styles.gallery} horizontal showsHorizontalScrollIndicator = {false}>\r\n            \r\n            <Tile \r\n              base64data = {this.props.cards[0]} \r\n              cardName = {this.props.cardNames[0]} \r\n              onLikeHandler = {this.changeSubmission.bind(this)}\r\n              clicked = {this.state.clickedArray[0]}\r\n            ></Tile>\r\n            <Tile \r\n              base64data = {this.props.cards[1]} \r\n              cardName = {this.props.cardNames[1]} \r\n              onLikeHandler = {this.changeSubmission.bind(this)}\r\n              clicked = {this.state.clickedArray[1]}\r\n            ></Tile>\r\n            <Tile \r\n              base64data = {this.props.cards[2]} \r\n              cardName = {this.props.cardNames[2]} \r\n              onLikeHandler = {this.changeSubmission.bind(this)}\r\n              clicked = {this.state.clickedArray[2]}\r\n            ></Tile>\r\n            <Tile \r\n              base64data = {this.props.cards[3]} \r\n              cardName = {this.props.cardNames[3]} \r\n              onLikeHandler = {this.changeSubmission.bind(this)}\r\n              clicked = {this.state.clickedArray[3]}\r\n            ></Tile>\r\n            <Tile \r\n              base64data = {this.props.cards[4]} \r\n              cardName = {this.props.cardNames[4]} \r\n              onLikeHandler = {this.changeSubmission.bind(this)}\r\n              clicked = {this.state.clickedArray[4]}\r\n            ></Tile>\r\n            <Tile \r\n              base64data = {this.props.cards[5]} \r\n              cardName = {this.props.cardNames[5]} \r\n              onLikeHandler = {this.changeSubmission.bind(this)}\r\n              clicked = {this.state.clickedArray[5]}\r\n            ></Tile>\r\n            <Tile \r\n              base64data = {this.props.cards[6]} \r\n              cardName = {this.props.cardNames[6]} \r\n              onLikeHandler = {this.changeSubmission.bind(this)}\r\n              clicked = {this.state.clickedArray[6]}\r\n            ></Tile> \r\n\r\n          </ScrollView>\r\n      </View>\r\n    )\r\n  };\r\n}\r\n*/}\r\nconst styles = StyleSheet.create({\r\n  gallery:{\r\n    width:'100%',\r\n    height: 320,\r\n  },\r\n  container: {\r\n    flex: 10,\r\n    backgroundColor: cream,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n  },\r\n});\r\n\r\n"]},"metadata":{},"sourceType":"module"}