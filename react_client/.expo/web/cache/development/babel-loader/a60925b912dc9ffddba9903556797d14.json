{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Canceled\\\\react_client\\\\components\\\\ImageGallery.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { purp, cream, deGris } from \"./../styles/common\";\nimport Tile from \"./Tile\";\n\nvar ImageGallery = function (_React$Component) {\n  _inherits(ImageGallery, _React$Component);\n\n  var _super = _createSuper(ImageGallery);\n\n  function ImageGallery(props) {\n    var _this;\n\n    _classCallCheck(this, ImageGallery);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      clickedCardIndex: -1,\n      currentViewedCardIndex: 0\n    };\n    _this.gallery = [];\n    return _this;\n  }\n\n  _createClass(ImageGallery, [{\n    key: \"changeSubmission\",\n    value: function changeSubmission(idx) {\n      var cardName;\n\n      for (var n = 0; n < this.props.cardNames.length; n++) {\n        if (this.props.cardNames[n] == idx) {\n          cardName = this.props.cardNames[idx];\n          this.props.cardHandler([cardName, n]);\n          var list = this.state.clickedArray.map(function (item, j) {\n            if (j === n) {\n              return true;\n            } else {\n              return false;\n            }\n          });\n          this.setState({\n            clickedArray: list\n          });\n        }\n      }\n    }\n  }, {\n    key: \"goBackward\",\n    value: function goBackward() {\n      var i = this.state.currentViewedCardIndex;\n\n      if (i >= 0) {\n        this.setState({\n          currentViewedCardIndex: i--\n        });\n      }\n    }\n  }, {\n    key: \"goForward\",\n    value: function goForward() {\n      var i = this.state.currentViewedCardIndex;\n\n      if (i < 8) {\n        this.setState({\n          currentViewedCardIndex: i++\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var iAmClicked = false;\n\n      for (var n = 0; n < 8; n++) {\n        if (this.state.clickedCardIndex === n) {\n          iAmClicked = true;\n        }\n\n        this.gallery[n] = React.createElement(Tile, {\n          base64data: this.props.cards[n],\n          cardName: this.props.cardNames[n],\n          onLikeHandler: this.changeSubmission.bind(this),\n          clicked: iAmClicked,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 7\n          }\n        });\n      }\n\n      {}\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var currentTile = this.gallery[this.state.currentViewedCardIndex];\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.backwardArrow,\n        onPress: this.goBackward.bind(this),\n        resizeMode: \"contain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        style: styles.arrow,\n        source: \"./../assets/arrow.png\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        style: styles.gallery,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }\n      }, currentTile), React.createElement(TouchableOpacity, {\n        style: styles.forwardArrow,\n        onPress: this.goForward.bind(this),\n        resizeMode: \"contain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        style: styles.arrow,\n        source: \"./../assets/arrow.png\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n\n  return ImageGallery;\n}(React.Component);\n\nexport { ImageGallery as default };\nvar styles = StyleSheet.create({\n  gallery: {\n    flex: 3\n  },\n  container: {\n    flex: 10,\n    flexDirection: 'row',\n    backgroundColor: cream,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%'\n  },\n  backwardArrow: {\n    flex: 1,\n    height: '45%'\n  },\n  forwardArrow: {\n    flex: 1,\n    height: '45%'\n  },\n  arrow: {\n    width: 350,\n    height: 350,\n    zIndex: 6\n  }\n});","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/Canceled/react_client/components/ImageGallery.js"],"names":["React","purp","cream","deGris","Tile","ImageGallery","props","state","clickedCardIndex","currentViewedCardIndex","gallery","idx","cardName","n","cardNames","length","cardHandler","list","clickedArray","map","item","j","setState","i","iAmClicked","cards","changeSubmission","bind","currentTile","styles","container","backwardArrow","goBackward","arrow","forwardArrow","goForward","Component","StyleSheet","create","flex","flexDirection","backgroundColor","alignItems","justifyContent","width","height","zIndex"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, View, Image, TouchableOpacity} from 'react-native';\r\nimport {purp, cream, deGris } from './../styles/common';\r\nimport Tile from './Tile';\r\n/* props:\r\n      cards\r\n      cardNames\r\n      cardHandler\r\n      */\r\nexport default class ImageGallery extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      clickedCardIndex : -1,\r\n      currentViewedCardIndex : 0\r\n    }\r\n    this.gallery = [];\r\n  }\r\n\r\n  changeSubmission(idx){\r\n    var cardName;\r\n\r\n    for(var n=0;n<this.props.cardNames.length;n++){\r\n      if(this.props.cardNames[n] == idx){\r\n        cardName = this.props.cardNames[idx];\r\n        this.props.cardHandler([cardName,n]);\r\n        const list = this.state.clickedArray.map((item,j) => {\r\n          if (j === n){\r\n            return true;\r\n          } else {\r\n            return false;\r\n          }\r\n        });\r\n    \r\n        this.setState({clickedArray : list});\r\n      }\r\n    }\r\n    \r\n  }\r\n  goBackward(){\r\n    var i = this.state.currentViewedCardIndex;\r\n    if(i >= 0){\r\n      this.setState({currentViewedCardIndex : i--});\r\n    }\r\n  }\r\n  goForward(){\r\n    var i = this.state.currentViewedCardIndex;\r\n    if(i < 8){\r\n      this.setState({currentViewedCardIndex : i++});\r\n    }\r\n  }\r\n  \r\n  componentDidMount(){\r\n    var iAmClicked = false;\r\n    for (var n=0;n<8;n++){\r\n      if (this.state.clickedCardIndex === n){\r\n        iAmClicked = true;\r\n      }\r\n      this.gallery[n] = \r\n      <Tile \r\n        base64data = {this.props.cards[n]} \r\n        cardName = {this.props.cardNames[n]} \r\n        onLikeHandler = {this.changeSubmission.bind(this)}\r\n        clicked = {iAmClicked}\r\n      ></Tile>;\r\n    }\r\n    {/*this.gallery = [\r\n      <Tile \r\n              base64data = {this.props.cards[0]} \r\n              cardName = {this.props.cardNames[0]} \r\n              onLikeHandler = {this.changeSubmission.bind(this)}\r\n              clicked = {this.state.clickedArray[0]}\r\n            ></Tile>,\r\n            <Tile \r\n              base64data = {this.props.cards[1]} \r\n              cardName = {this.props.cardNames[1]} \r\n              onLikeHandler = {this.changeSubmission.bind(this)}\r\n              clicked = {this.state.clickedArray[1]}\r\n            ></Tile>,\r\n            <Tile \r\n              base64data = {this.props.cards[2]} \r\n              cardName = {this.props.cardNames[2]} \r\n              onLikeHandler = {this.changeSubmission.bind(this)}\r\n              clicked = {this.state.clickedArray[2]}\r\n            ></Tile>,\r\n            <Tile \r\n              base64data = {this.props.cards[3]} \r\n              cardName = {this.props.cardNames[3]} \r\n              onLikeHandler = {this.changeSubmission.bind(this)}\r\n              clicked = {this.state.clickedArray[3]}\r\n            ></Tile>,\r\n            <Tile \r\n              base64data = {this.props.cards[4]} \r\n              cardName = {this.props.cardNames[4]} \r\n              onLikeHandler = {this.changeSubmission.bind(this)}\r\n              clicked = {this.state.clickedArray[4]}\r\n            ></Tile>,\r\n            <Tile \r\n              base64data = {this.props.cards[5]} \r\n              cardName = {this.props.cardNames[5]} \r\n              onLikeHandler = {this.changeSubmission.bind(this)}\r\n              clicked = {this.state.clickedArray[5]}\r\n            ></Tile>,\r\n            <Tile \r\n              base64data = {this.props.cards[6]} \r\n              cardName = {this.props.cardNames[6]} \r\n              onLikeHandler = {this.changeSubmission.bind(this)}\r\n              clicked = {this.state.clickedArray[6]}\r\n            ></Tile> \r\n    ]*/}\r\n  }\r\n  render() {\r\n    var currentTile = this.gallery[this.state.currentViewedCardIndex];\r\n    return (\r\n      <View style={styles.container}>\r\n        <TouchableOpacity \r\n          style = {styles.backwardArrow}\r\n          onPress = {this.goBackward.bind(this)}\r\n          resizeMode = 'contain'\r\n          >\r\n          <Image style = {styles.arrow} source = \"./../assets/arrow.png\"></Image>\r\n        </TouchableOpacity>\r\n        <View style = {styles.gallery}>\r\n          {currentTile}\r\n        </View>\r\n        <TouchableOpacity \r\n          style = {styles.forwardArrow}\r\n          onPress = {this.goForward.bind(this)}\r\n          resizeMode = 'contain'\r\n          >\r\n            <Image style = {styles.arrow} source = \"./../assets/arrow.png\"></Image>\r\n        </TouchableOpacity>\r\n      </View>\r\n    )\r\n  };\r\n\r\n}\r\nconst styles = StyleSheet.create({\r\n  gallery:{\r\n    flex: 3,\r\n  },\r\n  container: {\r\n    flex: 10,\r\n    flexDirection: 'row',\r\n    backgroundColor: cream,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n  },\r\n  backwardArrow :{\r\n    flex: 1,\r\n    height: '45%',\r\n\r\n  },\r\n  forwardArrow : {\r\n    flex : 1,\r\n    height: '45%',\r\n    \r\n  },\r\n  arrow : {\r\n    width: 350, \r\n    height: 350,\r\n    zIndex: 6,\r\n  }\r\n});\r\n\r\n"]},"metadata":{},"sourceType":"module"}